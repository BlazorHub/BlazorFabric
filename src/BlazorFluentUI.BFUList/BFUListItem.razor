@namespace BlazorFluentUI
@inherits BFUComponentBase
@typeparam TItem

<div @ref="RootElementReference"
     role="listitem"
     style=@GetListItemStyle()
     data-is-focusable=@(ItemFocusable ? "true" : "false")
     class=@($"ms-List-cell")
     >
    @ChildContent
</div>

@code {
    public double Width { get; set; }
    public double Height { get; set; }

    [Parameter] public RenderFragment ChildContent { get; set; }
    [Parameter] public int IndexPosition { get; set; }
    //[Parameter] public bool IsSelected { get; set; }
    [Parameter] public TItem Item { get; set; }
    [Parameter] public bool ItemFocusable { get; set; }
    //[Parameter] public bool UseDefaultStyling { get; set; }

    [Parameter]
    public EventCallback<ItemContainer<TItem>> ItemClicked { get; set; }

    private Task OnItemClick(MouseEventArgs e)
    {
        return ItemClicked.InvokeAsync(new ItemContainer<TItem>() { Item = this.Item, Index = this.IndexPosition });
    }

    protected string GetListItemStyle()
    {
        string style = "";

        return style;
    }
}